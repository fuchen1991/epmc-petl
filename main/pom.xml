<project>
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>epmc</groupId>
    <artifactId>epmc-main</artifactId>
    <version>1.0</version>
  </parent>
  <groupId>epmc</groupId>
  <artifactId>epmc</artifactId>
  <version>0</version>
  <scm>
    <connection>scm:svn:http://124.16.137.63/svn/iscasmc/tool</connection>
    <developerConnection>scm:git:https://github.com/liyi-david/ePMC.git</developerConnection>
    <tag>HEAD</tag>
    <url>https://github.com/liyi-david/ePMC.git</url>
  </scm>
  <build>
    <plugins>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>properties-maven-plugin</artifactId>
        <version>1.0.0</version>
        <executions>
          <execution>
            <phase>initialize</phase>
            <goals>
              <goal>read-project-properties</goal>
            </goals>
            <configuration>
              <files>
                <file>${project.basedir}/../native.properties</file>
              </files>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
	<groupId>org.codehaus.mojo</groupId>
	<artifactId>buildnumber-maven-plugin</artifactId>
	<version>1.3</version>
	<executions>
          <execution>
            <phase>validate</phase>
            <goals>
              <goal>create</goal>
            </goals>
          </execution>
	</executions>
	<configuration>
          <doCheck>false</doCheck>
          <doUpdate>false</doUpdate>
	</configuration>
      </plugin>
      <plugin>
	<groupId>org.apache.maven.plugins</groupId>
	<artifactId>maven-antrun-plugin</artifactId>
        <version>1.8</version>
        <executions>
          <execution>
            <id>clean</id>
            <phase>clean</phase>
            <configuration>
              <target>
                <property name="compile_classpath" refid="maven.compile.classpath"/>
                <property name="runtime_classpath" refid="maven.runtime.classpath"/>
                <property name="test_classpath" refid="maven.test.classpath"/>
                <property name="plugin_classpath" refid="maven.plugin.classpath"/>
                <property name="outputDirectory" value="${project.build.directory}/classes"/>
                <property name="CC_native" value="${CC_native}"/>
                <property name="CPP_native" value="${CPP_native}"/>
                <property name="STRIP_native" value="${STRIP_native}"/>
                <property name="CC_DARWIN" value="${CC_DARWIN}"/>
                <property name="CPP_DARWIN" value="${CPP_DARWIN}"/>
                <property name="STRIP_DARWIN" value="${STRIP_DARWIN}"/>
                <property name="CC_LINUX_X86" value="${CC_LINUX_X86}"/>
                <property name="CPP_LINUX_X86" value="${CPP_LINUX_X86}"/>
                <property name="STRIP_LINUX_X86" value="${STRIP_LINUX_X86}"/>
                <property name="CC_LINUX_X86_64" value="${CC_LINUX_X86_64}"/>
                <property name="CPP_LINUX_X86_64" value="${CPP_LINUX_X86_64}"/>
                <property name="STRIP_LINUX_X86_64" value="${STRIP_LINUX_X86_64}"/>
                <property name="CC_WINDOWS_X86" value="${CC_WINDOWS_X86}"/>
                <property name="CPP_WINDOWS_X86" value="${CPP_WINDOWS_X86}"/>
                <property name="STRIP_WINDOWS_X86" value="${STRIP_WINDOWS_X86}"/>
                <property name="CC_WINDOWS_X86_64" value="${CC_WINDOWS_X86_64}"/>
                <property name="CPP_WINDOWS_X86_64" value="${CPP_WINDOWS_X86_64}"/>
                <property name="STRIP_WINDOWS_X86_64" value="${STRIP_WINDOWS_X86_64}"/>
              </target>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
          <execution>
            <id>build</id>
            <phase>compile</phase>
            <configuration>
              <target>
                <property name="outputDirectory" value="${project.build.directory}/classes"/>
                <property name="compile_classpath" refid="maven.compile.classpath"/>
                <property name="runtime_classpath" refid="maven.runtime.classpath"/>
                <property name="test_classpath" refid="maven.test.classpath"/>
                <property name="plugin_classpath" refid="maven.plugin.classpath"/>
                <property name="CC_native" value="${CC_native}"/>
                <property name="CPP_native" value="${CPP_native}"/>
                <property name="STRIP_native" value="${STRIP_native}"/>
                <property name="CC_DARWIN" value="${CC_DARWIN}"/>
                <property name="CPP_DARWIN" value="${CPP_DARWIN}"/>
                <property name="STRIP_DARWIN" value="${STRIP_DARWIN}"/>
                <property name="CC_LINUX_X86" value="${CC_LINUX_X86}"/>
                <property name="CPP_LINUX_X86" value="${CPP_LINUX_X86}"/>
                <property name="STRIP_LINUX_X86" value="${STRIP_LINUX_X86}"/>
                <property name="CC_LINUX_X86_64" value="${CC_LINUX_X86_64}"/>
                <property name="CPP_LINUX_X86_64" value="${CPP_LINUX_X86_64}"/>
                <property name="STRIP_LINUX_X86_64" value="${STRIP_LINUX_X86_64}"/>
                <property name="CC_WINDOWS_X86" value="${CC_WINDOWS_X86}"/>
                <property name="CPP_WINDOWS_X86" value="${CPP_WINDOWS_X86}"/>
                <property name="STRIP_WINDOWS_X86" value="${STRIP_WINDOWS_X86}"/>
                <property name="CC_WINDOWS_X86_64" value="${CC_WINDOWS_X86_64}"/>
                <property name="CPP_WINDOWS_X86_64" value="${CPP_WINDOWS_X86_64}"/>
                <property name="STRIP_WINDOWS_X86_64" value="${STRIP_WINDOWS_X86_64}"/>
              </target>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
        </executions>
	<dependencies>
	  <dependency>
	    <groupId>ant-contrib</groupId>
	    <artifactId>ant-contrib</artifactId>
	    <version>1.0b3</version>
	    <exclusions>
	      <exclusion>
		<groupId>ant</groupId>
		<artifactId>ant</artifactId>
	      </exclusion>
	    </exclusions>
	  </dependency>
	  <dependency>
	    <groupId>org.apache.ant</groupId>
	    <artifactId>ant-nodeps</artifactId>
	    <version>1.8.1</version>
	  </dependency>
	</dependencies>
      </plugin>
      
    <plugin>
	  <groupId>org.apache.maven.plugins</groupId>
	  <artifactId>maven-surefire-plugin</artifactId>
	  <version>2.12.4</version>
	  <configuration>
	  	<skipTests>true</skipTests>
	  </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.7.0</version>
        <configuration>
          <source>1.8</source>
          <target>1.8</target>
        </configuration>
      </plugin>
      <plugin>
        <version>3.0.2</version>
        <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-jar-plugin</artifactId>
          <configuration>
            <archive>
              <manifest>
                <mainClass>epmc.main.EPMC</mainClass>
              </manifest>
              <manifestEntries>
              <SCM-Revision>${buildNumber}</SCM-Revision>
              </manifestEntries>
            </archive>
          </configuration>
      </plugin>
      <plugin>
	<groupId>com.github.wvengen</groupId>
        <artifactId>proguard-maven-plugin</artifactId>
        <version>2.0.14</version>
        <executions>
          <execution>
            <id>proguard</id>
            <phase>package</phase>
            <goals>
              <goal>proguard</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
        <keepclassmembers extends="java.lang.Enum">
                <method name="getEnumConstants"/>
            </keepclassmembers>
          <injar>${project.build.finalName}.jar</injar>
          <outjar>${project.build.finalName}-distribution.jar</outjar>
          <options>
          <!-- disable warnings from google gitmo -->
          <option>-dontwarn javax.annotation.**</option>
          <option>-dontobfuscate</option>
          <option>-keep public class epmc.main.EPMC {
                  public static void main(java.lang.String[]);
          }</option>
          <option>-keepattributes Exceptions</option>
          <option>-keep interface * extends java.rmi.Remote {
            &lt;methods&gt;;
          }</option>
          <option>-keep class * implements java.rmi.Remote {
            &lt;init&gt;(java.rmi.activation.ActivationID, java.rmi.MarshalledObject);
          }</option>
          <option>-keep class java.lang.reflect.Constructor { boolean isVarArgs(); }</option>
          <option>-keep class java.lang.reflect.Method { boolean isVarArgs(); }</option>
          <option>-keep class javax.lang.model.element.ExecutableElement { boolean isVarArgs(); }</option>
          <option>-keep class com.sun.jna.** { *; }</option>
          <option>-keep class epmc.options.** { *; }</option>
          <option>-keepclassmembers enum * { *; }</option>
          <option>-keepnames class * implements java.io.Serializable</option>
          <option>-keepclassmembers class * implements java.io.Serializable {
          static final long serialVersionUID;
            &lt;fields&gt;;
            private void writeObject(java.io.ObjectOutputStream);
            private void readObject(java.io.ObjectInputStream);
            java.lang.Object writeReplace();
            java.lang.Object readResolve();
          }</option>
          <option>-keep interface *</option>
	  <option>-keep class javax.crypto.** { *; }</option>
	  <option>-keep class org.slf4j.Logger { *; }</option>
	  <option>-keepclasseswithmembers class javax.crypto.** { *; }</option>
	  <option>-keepclasseswithmembers class org.slf4j.** { *; }</option>
	  <option>-dontshrink</option>
	  <option>-dontoptimize</option>
	  <option>-dontpreverify</option>
          <option>-optimizationpasses 3</option>
          </options>
          <libs>
	    <lib>${java.home}/jmods/java.base.jmod</lib>
	    <lib>${java.home}/jmods/java.desktop.jmod</lib>
	    <lib>${java.home}/jmods/java.rmi.jmod</lib>
	    <lib>${java.home}/jmods/java.logging.jmod</lib>
	    <lib>${java.home}/jmods/java.compiler.jmod</lib>
	    <lib>${java.home}/jmods/jdk.unsupported.jmod</lib>
	    <lib>${java.home}/jmods/java.management.jmod</lib>
	  </libs>
          <assembly>
            <inclusions>
              <inclusion>
		<groupId>net.sf.trove4j</groupId>
		<artifactId>trove4j</artifactId>
		<!--  not sure whether obfuscation legal -->
              </inclusion>
	      <inclusion>
		<groupId>com.google.guava</groupId>
		<artifactId>guava</artifactId>
	      </inclusion>
              <inclusion>
		<groupId>jna</groupId>
		<artifactId>jna</artifactId>
              </inclusion>
	      <inclusion>
		<groupId>javax</groupId>
		<artifactId>json</artifactId>
	      </inclusion>
            </inclusions>
	  </assembly>
        </configuration>
        <dependencies>
          <dependency>
            <groupId>net.sf.proguard</groupId>
            <artifactId>proguard-base</artifactId>
            <version>6.0.2</version>
            <scope>runtime</scope>
          </dependency>
        </dependencies>
      </plugin>                 
    </plugins>
  </build>
  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.8.1</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>net.sf.trove4j</groupId>
      <scope>system</scope>
      <artifactId>trove4j</artifactId>
	  <systemPath>${project.basedir}/../lib/trove-141006211716.jar</systemPath>
      <version>3.1a1</version>
    </dependency>
    <dependency>
      <groupId>jna</groupId>
      <artifactId>jna</artifactId>
      <version>4.2.2</version>
      <scope>system</scope>
      <systemPath>${project.basedir}/../lib/jna-4.2.2.jar</systemPath>
    </dependency>
    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
      <version>18.0</version>
      <scope>system</scope>
      <systemPath>${project.basedir}/../lib/guava-18.0.jar</systemPath>
    </dependency>
        <dependency>
      <groupId>javax</groupId>
      <artifactId>json</artifactId>
      <version>1.0</version>
      <scope>system</scope>
      <systemPath>${project.basedir}/../lib/javax.json-1.0.jar</systemPath>
    </dependency>
  </dependencies>
</project>

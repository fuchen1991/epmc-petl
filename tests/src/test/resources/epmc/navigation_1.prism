mdp

const int N_ROWS=3;
const int N_COLS=2;

const int GOAL_ROW=3;
const int GOAL_COL=2;

const int ROBOT_ROW=1;
const int ROBOT_COL=2;

formula at_goal = (col = GOAL_COL) & (row = GOAL_ROW);

formula prob_dis = 
	col = 2 & row = 2 ?  0.34543713989357155 : 
	col = 1 & row = 2 ?  0.04896671138703823 : 
	col = 4 & row = 2 ?  0.928158446525534 : 
	col = 3 & row = 2 ?  0.6369951789577802 : 
	0
	;

module controller
	halted : bool init false;
	
	[move_left] !halted -> true;
	[move_right] !halted -> true;
	[move_up] !halted -> true;
	[move_down] !halted -> true;
	
	[halt] !halted -> (halted'=true);
	[halted] halted -> true;
endmodule

module robot
	row : [1..N_ROWS] init ROBOT_ROW;
	col : [1..N_COLS] init ROBOT_COL;
	disappeared : bool init false;
	
	[move_left] at_goal | disappeared -> true;
	[move_left] !(at_goal | disappeared) & col > 1 -> prob_dis : (disappeared'=true) + (1-prob_dis) : (col'=col-1);

	[move_right] at_goal | disappeared -> true;
	[move_right] !(at_goal | disappeared) & col < N_COLS -> prob_dis : (disappeared'=true) + (1-prob_dis) : (col'=col+1);

	[move_up] at_goal | disappeared -> true;
	[move_up] !(at_goal | disappeared) & row < N_ROWS -> prob_dis : (disappeared'=true) + (1-prob_dis) : (row'=row+1);

	[move_down] at_goal | disappeared -> true;
	[move_down] !(at_goal | disappeared) & row > 1 -> prob_dis : (disappeared'=true) + (1-prob_dis) : (row'=row-1);
	
	[halt] true -> true;
	[halted] true -> true;
endmodule
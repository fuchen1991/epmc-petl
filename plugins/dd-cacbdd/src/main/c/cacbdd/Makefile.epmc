.PHONY : build
.PHONY : build_all
.PHONY : clean

LIB_NAME=cacbdd

# specific flags for CacBDD
DARWIN_XCFLAGS=-g -O3 -Wno-deprecated -fvisibility=hidden
LINUX_X86_XCFLAGS=-g -O3 -Wno-deprecated -static -static-libgcc -static-libstdc++ -m32 -fvisibility=hidden
LINUX_X86_64_XCFLAGS=-g -O3 -Wno-deprecated -static-libgcc -m64 -fPIC -fvisibility=hidden
# -static-libstdc++
WINDOWS_X86_XCFLAGS=-g -O3 -Wno-deprecated -static-libgcc -static-libstdc++ -fvisibility=hidden
WINDOWS_X86_64_XCFLAGS=-g -O3 -Wno-deprecated -static-libgcc -static-libstdc++ -fvisibility=hidden

include ../setosspecific


OBJECTS := $(patsubst %.cpp,%.o,$(wildcard *.cpp))
OBJECTS := $(filter-out main.o,$(OBJECTS))
HEADERS := $(wildcard *.h)

.cpp.o: $(OBJECTS) $(HEADERS)
	$(CPP) -c  $< $(XCFLAGS)

LIB_THERE:=$(CLASSDIR)/$(OSDIRPART)/$(DYN_PREFIX)$(LIB_NAME).$(DYN_EXT)
ifeq ("$(wildcard $(LIB_THERE))","")
build: $(OBJECTS) $(HEADERS)
	$(CPP) $(XCFLAGS) -shared *.o -o $(DYN_PREFIX)$(LIB_NAME).$(DYN_EXT)
	$(STRIP) -x $(DYN_PREFIX)$(LIB_NAME).$(DYN_EXT)
	mkdir -p $(CLASSDIR)/$(OSDIRPART)/; \
	cp $(DYN_PREFIX)$(LIB_NAME).$(DYN_EXT) $(CLASSDIR)/$(OSDIRPART)/; \
	rm $(DYN_PREFIX)$(LIB_NAME).$(DYN_EXT)
endif

build_all:
	make -f Makefile.epmc clean
	make -f Makefile.epmc build FOR_OS=Darwin_x86_64 CLASSDIR=$(CLASSDIR)
	make -f Makefile.epmc clean
	make -f Makefile.epmc build FOR_OS=Linux_i686 CLASSDIR=$(CLASSDIR)
	make -f Makefile.epmc clean
	make -f Makefile.epmc build FOR_OS=Linux_x86_64 CLASSDIR=$(CLASSDIR)
	make -f Makefile.epmc clean
	make -f Makefile.epmc build FOR_OS=Windows_i686 CLASSDIR=$(CLASSDIR)
	make -f Makefile.epmc clean
	make -f Makefile.epmc build FOR_OS=Windows_x86_64 CLASSDIR=$(CLASSDIR)

clean:
	rm -f *.o
	rm -f $(DYN_PREFIX)$(LIB_NAME).$(DYN_EXT)

distclean:
	rm -f *.o
	rm -f $(DYN_PREFIX)$(LIB_NAME).$(DYN_EXT)

.PHONY : build
.PHONY : build_all
.PHONY : clean

LIB_NAME=lpsolve55

# specific flags for lp_solve 5.5
DARWIN_XCFLAGS=-g -O3 -Wno-deprecated -fvisibility=hidden
LINUX_X86_XCFLAGS=-g -O3 -Wno-deprecated -static -static-libgcc -static-libstdc++ -m32 -fvisibility=hidden
LINUX_X86_64_XCFLAGS=-g -O3 -Wno-deprecated -fPIC -static-libgcc -static-libstdc++ -m64 -fvisibility=hidden
WINDOWS_X86_XCFLAGS=-g -O3 -Wno-deprecated -static-libgcc -static-libstdc++ -fvisibility=hidden
WINDOWS_X86_64_XCFLAGS=-g -O3 -Wno-deprecated -static-libgcc -static-libstdc++ -fvisibility=hidden

ifneq ($(wildcard ../setosspecific),)
include ../setosspecific
else
ifneq ($(wildcard ../../setosspecific),)
include ../../setosspecific
endif
endif

OBJECTS_MAIN := $(patsubst %.c,%.o,$(wildcard *.c))
OBJECTS_SHARED := $(patsubst %.c,%.o,$(wildcard shared/*.c))
OBJECTS_BFP := $(patsubst %.c,%.o,$(wildcard bfp/*.c))
OBJECTS_COLAMD := $(patsubst %.c,%.o,$(wildcard colamd/*.c))
OBJECTS_BFP_LUSOL := $(patsubst %.c,%.o,$(wildcard bfp/bfp_LUSOL/*.c))
OBJECTS_BFP_LUSOL_LUSOL := $(patsubst %.c,%.o,$(wildcard bfp/bfp_LUSOL/LUSOL/*.c))
OBJECTS := $(OBJECTS_MAIN) $(OBJECTS_SHARED) $(OBJECTS_BFP) $(OBJECTS_COLAMD) $(OBJECTS_BFP_LUSOL)  $(OBJECTS_BFP_LUSOL_LUSOL)
OBJECTS := $(filter-out main.o,$(OBJECTS))
OBJECTS := $(filter-out lp_solveDLL.o,$(OBJECTS))
OBJECTS := $(filter-out bfp/lp_BFP1.o,$(OBJECTS))
OBJECTS := $(filter-out bfp/lp_BFP2.o,$(OBJECTS))
OBJECTS := $(filter-out bfp/bfp_LUSOL/bfp_LUSOL.o,$(OBJECTS))
OBJECTS := $(filter-out bfp/bfp_LUSOL/LUSOL/lusol1.o,$(OBJECTS))
OBJECTS := $(filter-out bfp/bfp_LUSOL/LUSOL/lusol2.o,$(OBJECTS))
OBJECTS := $(filter-out bfp/bfp_LUSOL/LUSOL/lusol6a.o,$(OBJECTS))
OBJECTS := $(filter-out bfp/bfp_LUSOL/LUSOL/lusol6l0.o,$(OBJECTS))
OBJECTS := $(filter-out bfp/bfp_LUSOL/LUSOL/lusol6u.o,$(OBJECTS))
OBJECTS := $(filter-out bfp/bfp_LUSOL/LUSOL/lusol7a.o,$(OBJECTS))
OBJECTS := $(filter-out bfp/bfp_LUSOL/LUSOL/lusol8a.o,$(OBJECTS))
OBJECTS := $(filter-out bfp/bfp_LUSOL/LUSOL/myblas.o,$(OBJECTS))
OBJECTS := $(filter-out bfp/bfp_LUSOL/LUSOL/mmio.o,$(OBJECTS))
OBJECTS := $(filter-out lp_rlp.o,$(OBJECTS))
OBJECTS := $(filter-out bfp/bfp_LUSOL/LUSOL/lusolmain.o,$(OBJECTS))



HEADERS := $(wildcard *.h)


.c.o: $(OBJECTS) $(HEADERS)
#	cp iscas/config.h .
	$(CC) -c  $< -o $@ $(XCFLAGS) -std=gnu99 -Wno-format-security -Wno-parentheses-equality -I. -I./shared -I./colamd -I./bfp -I./bfp/bfp_LUSOL -I./bfp/bfp_LUSOL/LUSOL -I./bfp/bfp_LUSOL -DBFP_STAT_REFACT_TOTAL=0

LIB_THERE:=$(CLASSDIR)/$(OSDIRPART)/$(DYN_PREFIX)$(LIB_NAME).$(DYN_EXT)
ifeq ("$(wildcard $(LIB_THERE))","")
build: $(OBJECTS) $(HEADERS)
	$(CC) $(XCFLAGS) -shared *.o ./shared/*.o ./colamd/*.o ./bfp/bfp_LUSOL/*.o ./bfp/bfp_LUSOL/LUSOL/*.o -o $(DYN_PREFIX)$(LIB_NAME).$(DYN_EXT)
	$(STRIP) -x $(DYN_PREFIX)$(LIB_NAME).$(DYN_EXT)
	mkdir -p $(CLASSDIR)/$(OSDIRPART)
	cp $(DYN_PREFIX)$(LIB_NAME).$(DYN_EXT) $(CLASSDIR)/$(OSDIRPART)
	rm $(DYN_PREFIX)$(LIB_NAME).$(DYN_EXT)
endif

build_all:
	make -f Makefile.epmc clean
	make -f Makefile.epmc build FOR_OS=Darwin_x86_64 CLASSDIR=$(CLASSDIR)
	make -f Makefile.epmc clean
	make -f Makefile.epmc build FOR_OS=Linux_i686 CLASSDIR=$(CLASSDIR)
	make -f Makefile.epmc clean
	make -f Makefile.epmc build FOR_OS=Linux_x86_64 CLASSDIR=$(CLASSDIR)
	make -f Makefile.epmc clean
	make -f Makefile.epmc build FOR_OS=Windows_i686 CLASSDIR=$(CLASSDIR)
	make -f Makefile.epmc clean
	make -f Makefile.epmc build FOR_OS=Windows_x86_64 CLASSDIR=$(CLASSDIR)

clean:
	rm -f *.o ./shared/*.o ./colamd/*.o ./bfp/bfp_LUSOL/*.o ./bfp/bfp_LUSOL/LUSOL/*.o
	rm -f $(DYN_PREFIX)$(LIB_NAME).$(DYN_EXT)

distclean:
	rm -f *.o ./shared/*.o ./colamd/*.o ./bfp/bfp_LUSOL/*.o ./bfp/bfp_LUSOL/LUSOL/*.o
	rm -f $(DYN_PREFIX)$(LIB_NAME).$(DYN_EXT)
